name: Deploy to GitHub Pages

# 触发新的部署
on:
  push:
    branches: [main]
  workflow_dispatch:

# 添加权限配置
permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
      NEXTAUTH_URL: https://luckysonyu99.github.io
      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
      NODE_ENV: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          
      - name: Check environment variables
        run: |
          echo "Checking environment variables..."
          if [ -z "$NEXT_PUBLIC_SUPABASE_URL" ]; then
            echo "Error: NEXT_PUBLIC_SUPABASE_URL is not set"
            exit 1
          fi
          if [ -z "$NEXT_PUBLIC_SUPABASE_ANON_KEY" ]; then
            echo "Error: NEXT_PUBLIC_SUPABASE_ANON_KEY is not set"
            exit 1
          fi
          if [ -z "$NEXTAUTH_SECRET" ]; then
            echo "Error: NEXTAUTH_SECRET is not set"
            exit 1
          fi
          echo "All required environment variables are set"
          
      - name: Install dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm install
          npm install -D tailwindcss@latest postcss@latest autoprefixer@latest
          npm install daisyui@latest
          npx tailwindcss init -p
          
      - name: Create config files
        run: |
          echo "Creating Tailwind config..."
          cat > tailwind.config.js << 'EOL'
          /** @type {import('tailwindcss').Config} */
          module.exports = {
            content: [
              "./app/**/*.{js,ts,jsx,tsx,mdx}",
              "./pages/**/*.{js,ts,jsx,tsx,mdx}",
              "./components/**/*.{js,ts,jsx,tsx,mdx}",
            ],
            theme: {
              extend: {
                colors: {
                  primary: {
                    100: '#FFF0F0',
                    200: '#FFD1D1',
                    300: '#FFB3B3',
                    400: '#FF9494',
                    500: '#FF7676',
                    600: '#FF5757',
                  },
                  secondary: {
                    100: '#E8F9FF',
                    200: '#C1F0FF',
                    300: '#9AE6FF',
                    400: '#73DCFF',
                    500: '#4CD3FF',
                    600: '#25C9FF',
                  },
                  accent: {
                    100: '#FFF3E0',
                    200: '#FFE0B2',
                    300: '#FFCC80',
                    400: '#FFB74D',
                    500: '#FFA726',
                    600: '#FF9800',
                  },
                  candy: {
                    pink: '#FF9ECD',
                    blue: '#87CEEB',
                    yellow: '#FFE156',
                    green: '#98FB98',
                    purple: '#DDA0DD',
                    orange: '#FFB366',
                  },
                },
                fontFamily: {
                  kuaile: ['var(--font-kuaile)'],
                  qingke: ['var(--font-qingke)'],
                },
                animation: {
                  'float': 'float 3s ease-in-out infinite',
                  'wiggle': 'wiggle 1s ease-in-out infinite',
                },
                keyframes: {
                  float: {
                    '0%, 100%': { transform: 'translateY(0)' },
                    '50%': { transform: 'translateY(-10px)' },
                  },
                  wiggle: {
                    '0%, 100%': { transform: 'rotate(-3deg)' },
                    '50%': { transform: 'rotate(3deg)' },
                  },
                },
              },
            },
            plugins: [require("daisyui")],
            daisyui: {
              themes: [{
                mytheme: {
                  "primary": "#FF7676",
                  "secondary": "#4CD3FF",
                  "accent": "#FFB74D",
                  "neutral": "#3D4451",
                  "base-100": "#FFFFFF",
                  "info": "#87CEEB",
                  "success": "#98FB98",
                  "warning": "#FFE156",
                  "error": "#FF9ECD",
                }
              }],
              styled: true,
              base: true,
              utils: true,
              logs: true,
              rtl: false,
            },
          }
          EOL
          
          echo "Creating PostCSS config..."
          cat > postcss.config.js << 'EOL'
          module.exports = {
            plugins: {
              tailwindcss: {},
              autoprefixer: {},
            },
          }
          EOL
          
      - name: Build
        run: |
          echo "Starting build..."
          echo "NEXT_PUBLIC_SUPABASE_URL length: ${#NEXT_PUBLIC_SUPABASE_URL}"
          echo "NEXT_PUBLIC_SUPABASE_ANON_KEY length: ${#NEXT_PUBLIC_SUPABASE_ANON_KEY}"
          npm run build
          echo "Build completed"
        
      - name: Debug build output
        if: always()
        run: |
          echo "Listing build directory contents:"
          ls -la
          echo "Listing .next directory contents:"
          ls -la .next || echo "No .next directory"
          echo "Listing out directory contents:"
          ls -la out || echo "No out directory"
          echo "Node version:"
          node -v
          echo "NPM version:"
          npm -v
          echo "Package versions:"
          npm list tailwindcss postcss autoprefixer daisyui
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 